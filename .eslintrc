{
    "parser": "babel-eslint",
    "plugins": [
      "react",
      "mocha"
    ],
    "env": {
        "es6": true,
        "browser": true,
        "node": false,
        "amd": false,
        "mocha": false,
        "jasmine": false /* Use in testing? */
    },

    "rules": {
        // React
        "react/wrap-multilines": 1,
        // Errors

        "no-invalid-regexp": 2,
        /* Error Catching */
        "no-new-require": 2,
        "no-path-concat": 2,
        "quote-props": [2, "as-needed"],
        "no-self-compare": 2,
        "no-sparse-arrays": 1, /* use with 6to5? (destructuring) */
        "no-undefined": 2,
        "no-void": 2,
        "no-warning-comments": [1, { "terms": ["todo", "fixme", "xxx"], "location": "start" }],
        // Something is going werid: "block-scoped-var": 2,
        "comma-style": [2, "first", {exceptions: {
          ObjectExpression: true,
          ArrayExpression: true
        }}], /* Huge amount of errors found in ck because of this, if you dont like this, use many var statements. */
        "consistent-this": [1, "self"],
        "default-case": 2,
        "eqeqeq": [2, "smart"],
        "guard-for-in": 1,
        "strict": 0
        "wrap-iife": [2, "any"],
        "complexity": [1, 11],

        /* Readability */
        // Add exception for react? "no-extra-parens": 1,
        "no-lonely-if": 1,
        "no-mixed-requires": [1, false],
        "no-multi-spaces": [2, {exceptions: {
          VariableDeclarator: true,
          AssignmentExpression: true,
          LogicalExpression: true
        }}],
        "no-multiple-empty-lines": [1, {"max": 2}],
        "no-use-before-define": [2, "nofunc"],
        "brace-style": [2, "1tbs"],
        "curly": [1, "multi-line"], /* XXX: should warn for multiline without braces */
        "key-spacing": 0,
        "func-style": [1, "declaration"],
        "max-len": [2, 120, 4],
        "max-depth": [1, 4], /* Warn about complexity */
        "max-nested-callbacks": [1, 3], /* Warn about complexity */
        "max-params": [1, 3], /* Warn about complexity */
        "semi": 1, /* Not a code quality issue: http://blog.izs.me/post/2353458699/an-open-letter-to-javascript-leaders-regarding */
        "no-extra-semi": 1,
        "operator-assignment": [1, "always"],
        "quotes": [0, "single"], /* Double for long strs, single for short. */
        "space-before-function-paren": [2, "never"],
        "space-after-keywords": [2, "always"],
        "spaced-comment": [1, "always", {exceptions:["-", "+"]}],
        /* "wrap-regex": 0, */
        "yoda": [2, "never", { "exceptRange": true }],
        "valid-jsdoc": 1,
        /*
        "space-in-brackets": [0, "always", {
          "singleValue": true,
          "propertyName": false
        }]
        */
          /* "objectsInArrays": true, */
          /* "arraysInArrays": true, */
          /* "arraysInObjects": true, */
          /* "objectsInObjects": true, */
    },
    "globals":
             { "$": false
             , "jQuery": false
             , "CK": false
             , "FB": true
             , "MEDIA_URL": true
             , "CSRF_TOKEN": true
             , "BASE_URL": true
             , "escape": false
             , "unescape": false
             , "Cookie": true
             , "CKCookie": true
             , "_gaq": true
             , "module": true
             , "require": false
             }
}
